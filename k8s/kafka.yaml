---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: kafka-network
  namespace: ds
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              network/kafka-network: "true"
  podSelector:
    matchLabels:
      network/kafka-network: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: ds
spec:
  selector:
    app: kafka
  ports:
    - port: 9095
      targetPort: 9095
      name: internal
    - port: 9096
      targetPort: 9096
      name: external

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: ds
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        network/kafka-network: "true"
        app: kafka
    spec:
      nodeSelector:
        custom-label: "worker"
      enableServiceLinks: false
      containers:
        - name: kafka
          imagePullPolicy: IfNotPresent
          image: wurstmeister/kafka:latest
          ports:
            - containerPort: 9095
            - containerPort: 9096
          env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: 'INSIDE://kafka:9095, OUTSIDE://:9096'
            - name: KAFKA_CREATE_TOPICS
              value: 'weatherNotification:1:1,weatherInformations:1:1'
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: 'INSIDE'
            - name: KAFKA_LISTENERS
              value: 'INSIDE://:9095, OUTSIDE://:9096'
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: 'INSIDE:PLAINTEXT, OUTSIDE:PLAINTEXT'
            - name: KAFKA_MESSAGE_MAX_BYTES
              value: "2000000000"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: 'zookeeper:2181'
      hostname: kafka
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: ds
spec:
  ports:
    - port: 2181
      targetPort: 2181
  selector:
    app: zookeeper
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: ds
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        network/kafka-network: "true"
        app: zookeeper
    spec:
      containers:
        - image: wurstmeister/zookeeper:latest
          name: zookeeper
          ports:
            - containerPort: 2181
              hostPort: 2181
              protocol: TCP
      hostname: zookeeper
      restartPolicy: Always