version: '3'

services:

  gateway:
    build:
      context: gateway
      dockerfile: Dockerfile
    container_name: gateway
    ports:
      - 8085:8085
    depends_on:
      - auth_serv
      - city_serv
    restart: always

  mysql_auth:
    image: mysql:8.0
    container_name: mysql_auth
    environment:
      MYSQL_ROOT_PASSWORD: '12345'
      MYSQL_DATABASE: 'authDb'
      MYSQL_USER: 'anto'
      MYSQL_PASSWORD: '12345'
    volumes:
      - ./mysql_volume_auth:/var/lib/mysql
    ports:
      - 3306:3306
    restart: always

  mysql_city:
    image: mysql:8.0
    container_name: mysql_city
    environment:
      MYSQL_ROOT_PASSWORD: '12345'
      MYSQL_DATABASE: 'cityDb'
      MYSQL_USER: 'anto'
      MYSQL_PASSWORD: '12345'
    volumes:
      - ./mysql_volume_city:/var/lib/mysql
    ports:
      - 3307:3306
    restart: always

  mysql_api:
    image: mysql:8.0
    container_name: mysql_api
    environment:
      MYSQL_ROOT_PASSWORD: '12345'
      MYSQL_DATABASE: 'apiDb'
      MYSQL_USER: 'anto'
      MYSQL_PASSWORD: '12345'
    volumes:
      - ./mysql_volume_api:/var/lib/mysql
    ports:
      - 3308:3306
    restart: always

  auth_serv:
    build:
      context: ./authService
      dockerfile: Dockerfile
    container_name: auth_serv
    environment:
        MYSQL_DATABASE: 'users'
        MYSQL_USER: 'anto'
        MYSQL_PASSWORD: '12345'
        MYSQL_ROOT_PASSWORD: '12345'
        SECRET_KEY: "mySecretKey"
    ports:
      - 5000:5000
    restart: always
    depends_on:
      - mysql_auth

  city_serv:
    build:
      context: ./cityService
      dockerfile: Dockerfile
    container_name: city_serv
    environment:
        MYSQL_DATABASE: 'users'
        MYSQL_USER: 'anto'
        MYSQL_PASSWORD: '12345'
        MYSQL_ROOT_PASSWORD: '12345'
        SECRET_KEY: "mySecretKey"
    ports:
      - 5001:5001
    restart: always
    depends_on:
      - mysql_city
      - auth_serv
      - kafka

  api_serv:
    build:
      context: ./apiService
      dockerfile: Dockerfile
    container_name: api_serv
    environment:
      MYSQL_DATABASE: 'users'
      MYSQL_USER: 'anto'
      MYSQL_PASSWORD: '12345'
      MYSQL_ROOT_PASSWORD: '12345'
    restart: always
    depends_on:
      - mysql_api
      - auth_serv
      - city_serv
      - kafka

  nfy_serv:
    build:
      context: ./notifyService
      dockerfile: Dockerfile
    container_name: nfy_serv
    restart: always
    depends_on:
      - api_serv
      - kafka

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    restart: always
    ports:
      - 9095:9095
      - 9096:9096
    depends_on:
      - zookeeper # deve partire prima zookeeper in quanto c'Ã¨ il depends on
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9095, OUTSIDE://localhost:9096
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT, OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://:9095, OUTSIDE://:9096
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: 'weatherNotification:1:1,weatherInformations:1:1'
      KAFKA_MESSAGE_MAX_BYTES: 2000000000  # Imposta la dimensione massima a 2 megabyte

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - 2181:2181


  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
    depends_on:
      - cadvisor
      - node_exporter
      - auth_serv

  cadvisor: # raccolta metriche prestazioni DS
    image: google/cadvisor:latest
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  node_exporter: # raccolta metriche prestazioni host
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"

